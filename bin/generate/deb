#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/../.."

# This must be first because it includes a variable called $VERSION
source /etc/os-release

# These variable names match those used in .github/workflows/release-ppa.yml
ubuntu_codename=$VERSION_CODENAME
ubuntu_version=$VERSION_ID

changelog='See https://github.com/bin-cli/bin-cli/releases/tag/v$VERSION'
version=${1-}
revision=${2-1}

if [[ $# -lt 1 || $version = '--help' || $version = '-h' ]]; then
    echo "Usage: ${BIN_COMMAND-$0} <version> [revision=1]"
    exit
fi

# This is copied from .github/workflows/release-ppa.yml verbatim
rm -f debian/changelog

debchange \
  --create \
  --controlmaint \
  --distribution "$ubuntu_codename" \
  --package 'bin-cli' \
  --newversion "${version}+ubuntu${ubuntu_version}+ppa${revision}" \
  "${changelog/\$VERSION/$version}"

# This is different because (1) we build the binary version as well (which Launchpad
# does normally), and (2) we don't sign it, since this is just for testing
debuild \
  -F \
  -sa \
  -us -uc \
  --lintian-opts -i

# We can't stop 'debuild' outputting files in the parent directory,
# but we can move them after the fact
mkdir -p temp/dist/
mv "../bin-cli_${version}+ubuntu${ubuntu_version}+ppa${revision}"* temp/dist/

# List the contents to verify it
echo
dpkg -c "temp/dist/bin-cli_${version}+ubuntu${ubuntu_version}+ppa${revision}_all.deb"
