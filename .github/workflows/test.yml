name: Run tests

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
      - '!v**'
  pull_request:
  workflow_call:

permissions:
  contents: read

env:
  FORCE_COLOR: 1

jobs:

  # On Linux, we run every test including coverage checking, then upload the
  # compiled script and coverage report in case they are needed
  test-on-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-22.04 # https://github.com/bin-cli/bin-cli/issues/43
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Kcov
        run: sudo apt-get update && sudo apt-get install -y kcov

      - name: Install JavaScript packages
        run: npm ci

      - name: Run all tests
        run: bin/test

      - name: Upload 'bin' artifact
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bin
          path: dist/bin

      - name: Upload 'coverage/' artifact
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage
          path: temp/coverage/merged/

  test-on-alpine:
    name: Test on Alpine
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Alpine Linux in chroot
        uses: jirutka/setup-alpine@cf5fddcea495dcc19c0f991c6f6fa6a7abf3d50a # v1.3.0

      - name: Install Bash and Node.js
        shell: alpine.sh --root {0}
        run: apk update && apk add bash nodejs npm

      - name: Install JavaScript packages
        shell: alpine.sh {0}
        run: npm ci

      - name: Run all tests
        shell: alpine.sh {0}
        run: bin/test
        env:
          DISABLE_KCOV: true

  # On macOS, we run almost all tests, except those that require kcov
  # While kcov can run on macOS, it's *really* slow (even with --include-path)
  test-on-macos:
    name: Test on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install ShellCheck
        run: brew update && brew install shellcheck

      - name: Install JavaScript packages
        run: npm ci

      - name: Run all tests (except coverage)
        run: bin/test
        env:
          DISABLE_KCOV: true

  # On Windows, we just run some very basic tests - because translating
  # between Windows and Unix-style paths in Node.js gets too complicated!
  test-on-git-for-windows:
    name: Test on Windows (Git for Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run simple tests
        shell: bash
        run: bin/simple-test

  test-on-msys2:
    name: Test on Windows (MSYS2)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run simple tests
        shell: C:\msys64\usr\bin\bash.exe {0}
        run: bin/simple-test

  test-on-cygwin:
    name: Test on Windows (Cygwin)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Cygwin
        uses: egor-tensin/setup-cygwin@d2c752bab416d4b0662591bd366fc2686297c82d # v4.0.1

      - name: Run simple tests
        shell: C:\tools\cygwin\bin\bash.exe -e {0}
        run: bin/simple-test

  test-on-wsl:
    name: Test on Windows (WSL)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install WSL distribution
        uses: Vampire/setup-wsl@3b46b44374d5d0ae94654c45d114a3ed7a0e07a8 # v5.0.1

      - name: Run simple tests
        shell: wsl-bash {0}
        run: bin/simple-test
